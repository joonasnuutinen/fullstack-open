{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","res","data","create","newPerson","post","update","updatedPerson","put","id","remove","delete","Input","label","value","onChange","PersonForm","props","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","PersonsList","persons","filter","removePerson","person","name","toUpperCase","includes","map","Person","number","onClick","Message","msg","colors","default","error","messageStyle","color","padding","background","borderStyle","borderRadius","marginBottom","style","content","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","message","setMessage","useEffect","initialPersons","showMessage","setTimeout","event","target","preventDefault","indexOf","createdPerson","concat","catch","err","response","window","confirm","existingPerson","find","returnedPerson","p","ReactDOM","render","document","getElementById"],"mappings":"2LAEMA,EAAU,eAyBDC,EAPO,CACpBC,OAjBa,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAiB1CC,OAda,SAACC,GACd,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SActDI,OAXa,SAACC,GACd,OAAOT,IAAMU,IAAN,UAAab,EAAb,YAAwBY,EAAcE,IAAMF,GAAeP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAWlFQ,OARa,SAACD,GACd,OAAOX,IAAMa,OAAN,UAAgBhB,EAAhB,YAA2Bc,MCd9BG,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,SAAjB,OACZ,gCACGF,EADH,IAEE,uBAAOC,MAAOA,EAAOC,SAAUA,QAI7BC,EAAa,SAACC,GAAW,IAE3BC,EAKED,EALFC,SACAC,EAIEF,EAJFE,QACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,UACAC,EACEL,EADFK,mBAGF,OACE,uBAAMJ,SAAUA,EAAhB,UACE,cAAC,EAAD,CAAOL,MAAM,OAAOC,MAAOK,EAASJ,SAAUK,IAC9C,cAAC,EAAD,CAAOP,MAAM,SAASC,MAAOO,EAAWN,SAAUO,IAClD,8BACE,wBAAQC,KAAK,SAAb,uBAMFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,aAApB,OAClB,8BACGF,EACEC,QAAO,SAAAE,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASL,EAAOI,kBAC3DE,KAAI,SAAAJ,GAAM,OAAI,cAAC,EAAD,CAAwBA,OAAQA,EAAQD,aAAcA,GAAzCC,EAAOnB,UAInCwB,EAAS,SAAC,GAAD,IAAGL,EAAH,EAAGA,OAAQD,EAAX,EAAWA,aAAX,OACb,gCACGC,EAAOC,KADV,IACiBD,EAAOM,OADxB,IACgC,wBAAQC,QAAS,kBAAMR,EAAaC,EAAOnB,KAA3C,wBAI5B2B,EAAU,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACjB,GAAY,OAARA,EACF,OAAO,KAGT,IAAMC,EAAS,CACbC,QAAS,QACTC,MAAO,OAGHC,EAAe,CACnBC,MAAOJ,EAAOD,EAAId,OAASe,EAAOC,QAClCI,QAAS,GACTC,WAAY,YACZC,YAAa,QACbC,aAAc,EACdC,aAAc,IAGhB,OACE,qBAAKC,MAAOP,EAAZ,SACGJ,EAAIY,WAyHIC,EApHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT1B,EADS,KACA2B,EADA,OAEcD,mBAAS,IAFvB,mBAEThC,EAFS,KAEAkC,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT9B,EAHS,KAGEiC,EAHF,OAIkBH,mBAAS,IAJ3B,mBAITI,EAJS,KAIEC,EAJF,OAKcL,mBAAS,MALvB,mBAKTM,EALS,KAKAC,EALA,KAOhBC,qBAAU,WACR/D,EACGC,SACAG,MAAK,SAAA4D,GACJR,EAAWQ,QAEd,IAEH,IA0EMC,EAAc,SAACxB,GACnBqB,EAAWrB,GACXyB,YAAW,WACTJ,EAAW,QACV,MAGL,OACE,gCACE,2CACA,cAAC,EAAD,CAASrB,IAAKoB,IACd,cAAC,EAAD,CAAO5C,MAAM,SAASC,MAAOyC,EAAWxC,SAfjB,SAACgD,GAC1BP,EAAaO,EAAMC,OAAOlD,UAexB,yCACA,cAAC,EAAD,CACEI,SAxFY,SAAC6C,GAEjB,GADAA,EAAME,kBACuD,IAAzDxC,EAAQO,KAAI,SAAAJ,GAAM,OAAIA,EAAOC,QAAMqC,QAAQ/C,GAA/C,CA0BA,IAAMf,EAAY,CAChByB,KAAMV,EACNe,OAAQb,GAGVzB,EACGO,OAAOC,GACPJ,MAAK,SAAAmE,GACJf,EAAW3B,EAAQ2C,OAAOD,IAC1Bd,EAAW,IACXC,EAAa,IACbO,EAAY,CAAEZ,QAAQ,SAAD,OAAW9B,QAEjCkD,OAAM,SAAAC,GACLT,EAAY,CACVtC,KAAM,QACN0B,QAASqB,EAAIC,SAASrE,KAAKsC,eA1CjC,CACE,IAAKgC,OAAOC,QAAP,UAAkBtD,EAAlB,2EACH,OAGF,IAAMuD,EAAiBjD,EAAQkD,MAAK,SAAA/C,GAAM,OAAIA,EAAOC,OAASV,KACxDZ,EAAa,2BAAQmE,GAAR,IAAwBxC,OAAQb,IACnDzB,EACGU,OAAOC,GACPP,MAAK,SAAA4E,GACJxB,EAAW3B,EAAQO,KAAI,SAAA6C,GAAC,OAAIA,EAAEpE,KAAOmE,EAAenE,GAAKmE,EAAiBC,MAC1ExB,EAAW,IACXC,EAAa,IACbO,EAAY,CAAEZ,QAAQ,WAAD,OAAa9B,QAEnCkD,OAAM,WACLR,EAAY,CACVtC,KAAM,QACN0B,QAAQ,kBAAD,OAAoB9B,EAApB,+CAETiC,EAAW3B,EAAQC,QAAO,SAAAmD,GAAC,OAAIA,EAAEpE,KAAOF,EAAcE,YAmExDU,QAASA,EACTC,iBA5BmB,SAAC2C,GACxBV,EAAWU,EAAMC,OAAOlD,QA4BpBO,UAAWA,EACXC,mBA1BqB,SAACyC,GAC1BT,EAAaS,EAAMC,OAAOlD,UA4BxB,yCACA,cAAC,EAAD,CAAaW,QAASA,EAASC,OAAQ6B,EAAW5B,aA/CjC,SAAClB,GACpB,IAAMoB,EAAOJ,EAAQkD,MAAK,SAAA/C,GAAM,OAAIA,EAAOnB,KAAOA,KAAIoB,KACjD2C,OAAOC,QAAP,iBAAyB5C,EAAzB,OAGLjC,EACGc,OAAOD,GACPT,MAAK,WACJoD,EAAW3B,EAAQC,QAAO,SAAAE,GAAM,OAAIA,EAAOnB,KAAOA,MAClDoD,EAAY,CAAEZ,QAAQ,WAAD,OAAapB,eC3I1CiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b94cd7b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(res => res.data)\n}\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then(res => res.data)\n}\n\nconst update = (updatedPerson) => {\n  return axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson).then(res => res.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  remove,\n}\n\nexport default personService\n","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\n\nconst Input = ({ label, value, onChange }) => (\n  <div>\n    {label}:\n    <input value={value} onChange={onChange} />\n  </div>\n)\n\nconst PersonForm = (props) => {\n  const {\n    onSubmit,\n    newName,\n    handleNameChange,\n    newNumber,\n    handleNumberChange\n  } = props\n  \n  return (\n    <form onSubmit={onSubmit}>\n      <Input label=\"name\" value={newName} onChange={handleNameChange} />\n      <Input label=\"number\" value={newNumber} onChange={handleNumberChange} />\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst PersonsList = ({ persons, filter, removePerson }) => (\n  <div>\n    {persons\n      .filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\n      .map(person => <Person key={person.id} person={person} removePerson={removePerson} />)}\n  </div>\n)\n\nconst Person = ({ person, removePerson }) => (\n  <div>\n    {person.name} {person.number} <button onClick={() => removePerson(person.id)}>delete</button>\n  </div>\n)\n\nconst Message = ({ msg }) => {\n  if (msg === null) {\n    return null\n  }\n\n  const colors = {\n    default: 'green',\n    error: 'red'\n  }\n\n  const messageStyle = {\n    color: colors[msg.type] || colors.default,\n    padding: 10,\n    background: 'lightgray',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={messageStyle}>\n      {msg.content}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map(person => person.name).indexOf(newName) !== -1) {\n      if (!window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)) {\n        return\n      }\n      // Update existing\n      const existingPerson = persons.find(person => person.name === newName)\n      const updatedPerson = { ...existingPerson, number: newNumber }\n      personService\n        .update(updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p))\n          setNewName('')\n          setNewNumber('')\n          showMessage({ content: `Updated ${newName}` })\n        })\n        .catch(() => {\n          showMessage({\n            type: 'error',\n            content: `Information of ${newName} has already been removed from the server`\n          })\n          setPersons(persons.filter(p => p.id !== updatedPerson.id))\n        })\n      return\n    }\n\n    // Add new\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newPerson)\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n        showMessage({ content: `Added ${newName}` })\n      })\n      .catch(err => {\n        showMessage({\n          type: 'error',\n          content: err.response.data.error,\n        })\n      })\n  }\n\n  const removePerson = (id) => {\n    const name = persons.find(person => person.id === id).name\n    if (!window.confirm(`Delete ${name}?`)) {\n      return\n    }\n    personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        showMessage({ content: `Deleted ${name}` })\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const showMessage = (msg) => {\n    setMessage(msg)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Message msg={message} />\n      <Input label=\"filter\" value={newFilter} onChange={handleFilterChange} />\n      <h2>Add new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      \n      <h2>Numbers</h2>\n      <PersonsList persons={persons} filter={newFilter} removePerson={removePerson} />\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}